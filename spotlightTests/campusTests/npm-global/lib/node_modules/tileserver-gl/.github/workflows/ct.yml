name: 'Continuous Testing'

on:
  workflow_call:

permissions:
  checks: write
  contents: read

jobs:
  ct:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository âœ¨ (non-dependabot)
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: actions/checkout@v4

      - name: Check out repository ðŸŽ‰ (dependabot)
        if: ${{ github.actor == 'dependabot[bot]' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Update apt-get ðŸš€
        run: sudo apt-get update -qq

      - name: Install dependencies (Ubuntu) ðŸš€
        run: >-
          sudo apt-get install -qq libcairo2-dev libjpeg8-dev libpango1.0-dev
          libgif-dev build-essential g++ xvfb libgles2-mesa-dev libgbm-dev
          libxxf86vm-dev

      - name: Setup node env ðŸ“¦
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'
          check-latest: true
          cache: 'npm'

      - name: Install dependencies ðŸš€
        run: npm ci --prefer-offline --no-audit

      - name: Pull test data ðŸ“¦
        run: >-
          wget -O test_data.zip
          https://github.com/maptiler/tileserver-gl/releases/download/v1.3.0/test_data.zip

      - name: Prepare test data ðŸ“¦
        run: unzip -q test_data.zip -d test_data

      - name: Run tests ðŸ§ª
        run: xvfb-run --server-args="-screen 0 1024x768x24" npm test

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'arm64'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Test Docker Build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          platforms: linux/arm64,linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create Tileserver Light Directory
        run: node publish.js --no-publish

      - name: Install node dependencies
        run: npm ci --prefer-offline --no-audit
        working-directory: ./light

      - name: Test Light Version to Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: ./light
          file: ./light/Dockerfile
          push: false
          platforms: linux/arm64,linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
